name: Windows Release

on:
  push:
    branches:
      - 'master'
      - 'workflow-test'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'workflow-test'

defaults:
  run:
    shell: powershell

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: '6.5.3'
  ARTIFACT: 'nahidanotes-build.zip'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: (2) Get all tags for correct version determination
        run: git fetch --all --tags -f

      - name: (3) Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2019_64
          dir: ${{ runner.temp }}
          setup-python: false

      - name: (4) Download JOM
        run: |
          Invoke-WebRequest -Uri 'http://download.qt.io/official_releases/jom/jom.zip' -OutFile jom.zip

      - name: (5) Unzip JOM
        run: Expand-Archive -Path jom.zip -DestinationPath ${{ runner.temp }}/jom

      - name: (6) Create build directory
        run: New-Item -Path ${{ runner.temp }}/build -ItemType Directory

      - name: (7) Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: (8) Build
        run: |
          cmake -B ${{ runner.temp }}/build -S ${{ env.SOURCE_DIR }}
          Set-Location -Path ${{ runner.temp }}/build
          ${{ runner.temp }}/jom/jom -j2
          Set-Location -Path release
          windeployqt --qmldir ${{ env.SOURCE_DIR }} nahidanotes.exe --pdb --release --compiler-runtime
          Copy-Item -Path 'C:\Windows\System32\concrt140.dll' -Destination .
          Copy-Item -Path 'C:\Windows\System32\vccorlib140.dll' -Destination .
          Copy-Item -Path 'C:\Windows\System32\msvcp140.dll' -Destination .
          Copy-Item -Path 'C:\Windows\System32\vcruntime140.dll' -Destination .

      - name: (9) Zip build
        run: Compress-Archive -Path ${{ runner.temp }}/build/* -DestinationPath ${{ runner.temp }}/${{ env.ARTIFACT }}

      - name: (10) Save build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/${{ env.ARTIFACT }}
